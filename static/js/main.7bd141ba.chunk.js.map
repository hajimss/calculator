{"version":3,"sources":["components/Screen.js","components/Buttons.js","components/Calculator.js","App.js","index.js"],"names":["Screen","props","this","evaluatedNumber","console","log","id","number","React","Component","Buttons","passValue","e","value","target","clickHandler","state","Grid","columns","Row","stretched","Column","Button","primary","onClick","secondary","width","color","Calculator","firstNumber","secondNumber","operator","bind","evaluate","answer","setState","prevState","second","first","parseInt","toString","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7bd141ba.chunk.js","sourcesContent":["import React from 'react';\nimport './Screen.css';\n\nexport default class Screen extends React.Component {\n    constructor (props) {\n        super(props);\n    }\n    \n\n    render () {\n        if (this.props.evaluatedNumber === \"\") {\n            console.log(\"here\");\n            return (\n                <div id=\"ScreenBody\">\n                    <h1>{this.props.number}</h1>\n                </div>\n            );\n        }\n        else {\n            console.log(\"ere\");\n            return (\n                <div id=\"ScreenBody\">\n                    <h1>{this.props.evaluatedNumber}</h1>\n                </div>\n            );\n        }\n    }\n} ","import React from 'react';\nimport { Grid, Button } from 'semantic-ui-react';\n\nexport default class Buttons extends React.Component {\n    constructor (props) {\n        super(props);\n\n    this.state = {\n        number: \"\"\n    }\n\n    }\n\n    passValue = (e) => {\n        var value = e.target.id\n        this.props.clickHandler(value)\n    }\n\n\n    render () {\n        return (\n            <div>\n                <Grid columns={4}>\n                    <Grid.Row stretched>\n                        <Grid.Column>\n                            <Button primary id=\"1\" onClick={(e) => this.passValue(e)}>1</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button primary id=\"2\" onClick={(e) => this.passValue(e)}>2</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button primary id=\"3\" onClick={(e) => this.passValue(e)}>3</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button secondary id=\"+\" onClick={(e) => this.passValue(e)}>+</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <Grid columns={4}>\n                    <Grid.Row stretched>\n                        <Grid.Column>\n                            <Button primary id=\"4\" onClick={(e) => this.passValue(e)}>4</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button primary id=\"5\" onClick={(e) => this.passValue(e)}>5</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button primary id=\"6\" onClick={(e) => this.passValue(e)}>6</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button secondary id=\"-\" onClick={(e) => this.passValue(e)}>-</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <Grid columns={4}>\n                    <Grid.Row stretched>\n                        <Grid.Column>\n                            <Button primary id=\"7\" onClick={(e) => this.passValue(e)}>7</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button primary id=\"8\" onClick={(e) => this.passValue(e)}>8</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button primary id=\"9\" onClick={(e) => this.passValue(e)}>9</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button secondary id=\"x\" onClick={(e) => this.passValue(e)}>x</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n                <Grid >\n                    <Grid.Row stretched>\n                        <Grid.Column width={4}>\n                            <Button primary id=\"0\" onClick={(e) => this.passValue(e)}>0</Button>\n                        </Grid.Column>\n                        <Grid.Column width={4}>\n                            <Button secondary id=\"/\" onClick={(e) => this.passValue(e)}>/</Button>\n                        </Grid.Column>\n                        <Grid.Column width={8}>\n                            <Button color=\"grey\" id=\"=\" onClick={(e) => this.passValue(e)}>=</Button>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n        </div>\n            \n        );\n    }\n}","import React from \"react\";\nimport \"./Calculator.css\";\nimport Screen from \"./Screen\";\nimport Buttons from \"./Buttons\";\n\nexport default class Calculator extends React.Component {\n    constructor () {\n        super();\n\n        this.state = {\n            firstNumber : \"\",\n            secondNumber : \"\",\n            operator : \"\",\n            evaluatedNumber : \"\"\n        }\n\n        this.clickHandler = this.clickHandler.bind(this);\n        this.evaluate = this.evaluate.bind(this);\n    }\n\n    clickHandler(e) {\n        if (e === '=') {\n            console.log(this.state.firstNumber);\n            console.log(this.state.secondNumber);\n            console.log(this.state.operator)\n            var answer = this.evaluate(this.state.firstNumber, this.state.secondNumber, this.state.operator);\n            console.log(answer);\n            this.setState({\n                evaluatedNumber : answer\n            })\n            console.log(this.state.evaluatedNumber);\n            return\n        }\n        if (e === '+' || e === '-' || e === '/' || e === 'x') {\n            this.setState({\n                secondNumber: this.state.firstNumber,\n                operator: e,\n                firstNumber: \"\"\n            })\n        }\n        else {\n            this.setState((prevState) => ({\n                firstNumber: prevState.firstNumber + e\n            }));\n        }\n    }\n\n    evaluate(second, first, operator) {\n        if (operator === '+') {\n            var answer = parseInt(first) + parseInt(second);\n            return answer.toString()\n        }\n        if (operator === '-') {\n            var answer = parseInt(first) - parseInt(second);\n            return answer.toString()\n        }\n        if (operator === 'x') {\n            var answer = parseInt(first) * parseInt(second);\n            return answer.toString()\n        }\n        if (operator === '/') {\n            var answer = parseInt(first) / parseInt(second);\n            return answer.toString()\n        }\n        console.log(\"it got through\")\n    }\n\n    render () {\n        console.log(this.state.evaluatedNumber);\n        return (\n            <div id=\"calculatorBody\">\n                <Screen \n                number={this.state.firstNumber}\n                evaluatedNumber={this.state.evaluatedNumber}\n                />\n                <Buttons clickHandler={this.clickHandler}/>\n            </div>\n        );\n    }\n} ","import React from 'react';\nimport './App.css';\nimport Calculator from \"./components/Calculator\";\n\nexport default class App extends React.Component {\n    constructor() {\n        super();\n    }\n    render () {\n        return (\n            <div>\n                <h1>Calculator of the Future!</h1>\n                <Calculator/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}